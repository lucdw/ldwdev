% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dev_xref.r, R/get_func_xref.r
\name{get_func_xref}
\alias{get_func_xref}
\title{The get_func_xref function}
\usage{
get_func_xref(map = ".", recursive = FALSE, only.cross.file = FALSE)

get_func_xref(map = ".", recursive = FALSE, only.cross.file = FALSE)
}
\arguments{
\item{map}{a character item naming the map to search in}

\item{recursive}{a logical indicating if subdirectories should be searched
in for r-files (default FALSE)}

\item{only.cross.file}{a logical indicating (if TRUE) to select only
references in other files than the definition}
}
\value{
list of function.defs, with in each item a list with functionname,
 file, line in file where the function is defined and a dataframe dfrefs
 with the places where the function is called (file, line,
 function or empty)

list of function.defs, with in each item a list with functionname,
 file, line in file where the function is defined and a dataframe dfrefs
 with the places where the function is called (file, line,
 function or empty)
}
\description{
This function makes creates a cross-reference for all function.defs found
in a group of r files.

This function makes creates a cross-reference for all function.defs found
in a group of r files.
}
\examples{
\dontrun{
 temp <- get_func_xref(".")
 for (fi in seq_along(temp)) {
  temp1 <- temp[[fi]]
  cat(temp1$functionname, temp1$file, temp1$line, "\n")
  dfrefs <- temp1$dfrefs
  if (nrows(dfrefs)>0) {
    for (fr in seq.int(1, nrow(dfrefs))) {
     cat("     ", dfrefs$refFileName[fr], dfrefs$refLocation[fr],
      dfrefs$refFunction[fr], "\n")
    }
  }
 }
}

\dontrun{
 temp <- get_func_xref(".")
 for (fi in seq_along(temp)) {
  temp1 <- temp[[fi]]
  cat(temp1$functionname, temp1$file, temp1$line, "\n")
  dfrefs <- temp1$dfrefs
  if (nrows(dfrefs)>0) {
    for (fr in seq.int(1, nrow(dfrefs))) {
     cat("     ", dfrefs$refFileName[fr], dfrefs$refLocation[fr],
      dfrefs$refFunction[fr], "\n")
    }
  }
 }
}

}
\author{
Luc De Wilde
}
